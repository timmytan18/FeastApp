type FeastItem
  @model
  @key(fields: ["PK", "SK"])
  @key(name: "ByGSI1", fields: ["GSI1", "SK"], queryField: "itemsByGSI1")
  @key(name: "ByGSI2", fields: ["GSI2", "LSI1"], queryField: "itemsByGSI2")
  @key(name: "ByLSI1", fields: ["PK", "LSI1"], queryField: "itemsByLSI1")
  @key(name: "ByLSI2", fields: ["PK", "LSI2"], queryField: "itemsByLSI2")
  @key(name: "ByLSI3", fields: ["PK", "LSI3"], queryField: "itemsByLSI3")
  @key(name: "ByLSI4", fields: ["PK", "LSI4"], queryField: "itemsByLSI4")
  @key(name: "ByLSI5", fields: ["PK", "LSI5"], queryField: "itemsByLSI5") {
  PK: String!
  SK: String!
  GSI1: String
  GSI2: String
  LSI1: String
  LSI2: String
  LSI3: String
  LSI4: Int
  LSI5: Int
  name: String
  uid: String
  identityId: String
  phone: String
  picture: String
  city: String
  numFollowers: Int
  numFollowing: Int
  follower: Follower
  placeId: String
  geo: String
  coordinates: Coordinate
  categories: [String]
  placeType: String
  placeInfo: PlaceInfo
  placeUserInfo: PlaceUserInfo
  rating: Rating
  review: String
  updatedAt: String
}

type Follower {
  PK: String
  SK: String
  name: String
  uid: String
  identityId: String
  followedSK: String
  picture: String
}

type PlaceInfo {
  name: String
  priceLvl: Int
  orderUrls: AWSJSON
  displayPhone: String
  address: String
  placeUrl: String
  coordinates: Coordinate
  menuUrl: String
  imgUrl: String
  phone: String
  yelpAlias: String
  categories: [String]
}

type Coordinate {
  latitude: Float
  longitude: Float
}

type Rating {
  overall: Float!
  food: Float!
  value: Float!
  service: Float!
  ambience: Float!
}

type PlaceUserInfo {
  uid: String
  name: String
  picture: String
}

type Mutation {
  incrementFeastItem(input: IncrementFeastItemInput!): FeastItem
  batchCreateFollowingPosts(input: BatchCreateFollowingPostsInput!): FeastItem
}

input IncrementFeastItemInput {
  PK: String!
  SK: String!
  numFollowers: Int
  numFollowing: Int
}

input BatchCreateFollowingPostsInput {
  posts: [FollowingPostInput]
}

input FollowingPostInput {
  PK: String!
  SK: String!
  LSI1: String!
  LSI2: String!
  placeId: String!
  name: String!
  geo: String!
  picture: String
  categories: [String]
  review: String
  createdAt: String
  rating: RatingInput
  placeUserInfo: PlaceUserInfoInput
}

input RatingInput {
  overall: Float!
  food: Float!
  value: Float!
  service: Float!
  ambience: Float!
}

input PlaceUserInfoInput {
  uid: String
  name: String
  picture: String
}
